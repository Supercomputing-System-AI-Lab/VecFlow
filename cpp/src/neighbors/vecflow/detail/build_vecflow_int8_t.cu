/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * NOTE: this file is generated by build_00_generate.py
 *
 * Make changes there and run in this directory:
 *
 * > python build_00_generate.py
 *
 */

#include <cuvs/neighbors/vecflow.hpp>
#include <cuvs/neighbors/shared_resources.hpp>
#include "../vecflow_build.cuh"

namespace cuvs::neighbors::vecflow {

#define instantiate_build_vecflow_d(data_t) \
 auto build( \
    shared_resources::configured_raft_resources& res, \
    raft::device_matrix_view<const data_t, int64_t> dataset, \
    const std::vector<std::vector<int>>& data_label_vecs, \
    int graph_degree, \
    int specificity_threshold, \
    const std::string& graph_fname, \
    const std::string& bfs_fname, \
    bool force_rebuild) -> cuvs::neighbors::vecflow::index<data_t> \
  { \
    return cuvs::neighbors::vecflow::build<data_t>( \
      res, dataset, data_label_vecs, graph_degree, specificity_threshold, graph_fname, bfs_fname, force_rebuild); \
  }

instantiate_build_vecflow_d(int8_t);
#undef instantiate_build_vecflow_d

}  // namespace cuvs::neighbors::vecflow